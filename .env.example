# Example environment variables for techno-prompt
# Copy to .env and adjust values as needed.

# Limit loaded genres (comma separated) - dev fast path
# VITE_LIMIT_GENRES=techno,hiphop,trap

# API endpoints (future)
# VITE_OPENAI_ENDPOINT=https://api.openai.com/v1/chat/completions
# VITE_GEMINI_ENDPOINT=https://generativelanguage.googleapis.com/v1beta/models

# Feature flags
# VITE_FEATURE_LIVE_AUDIO=1
# VITE_FEATURE_TONE=1

# Orchestrator / Queue
# REDIS_URL=redis://127.0.0.1:6379
# QUEUE_KEY=tasks:pending
# PROCESSED_KEY=tasks:processed
# ORCH_ALLOW_NO_REDIS=1   # Enable in-memory fallback if Redis absent (dev only)

# Multi-model council overrides (optional)
# COUNCIL_REQ_MODEL=gemini-1.5-flash
# COUNCIL_REVIEW_MODEL=gemini-1.5-pro
# COUNCIL_ARCH_MODEL=gpt-4.1-mini
# COUNCIL_IMPL_MODEL=gpt-4.1-mini
# COUNCIL_REFINE_MODEL=gpt-4.1

# Workflow (parallel Gemini+GPT) model overrides (optional)
# WORKFLOW_GPT_MODEL=gpt-4.1
# WORKFLOW_GEMINI_MODEL=gemini-1.5-pro

# Enable deterministic mock AI (no external API calls if keys missing)
# ALLOW_MOCK_AI=1

# === Memory System ===
# MEMORY_ROOT=./memory
# MEMORY_MAX_CTX=1800
# MEMORY_RECENCY_TAU_D=7

# === Google Drive Sync (optional) ===
# GOOGLE_DRIVE_ENABLED=0
# GOOGLE_DRIVE_ROOT_FOLDER_ID=
# GOOGLE_SERVICE_ACCOUNT_JSON_BASE64=
# GOOGLE_SERVICE_ACCOUNT_FILE=./service-account.json

# === GCP Integration ===
# GCP_PROJECT_ID=your-gcp-project-id
# GCP_STORAGE_BUCKET=techno-prompt-storage
# GOOGLE_APPLICATION_CREDENTIALS=./path/to/service-account.json

# === Colab Integration ===
# COLAB_WEBHOOK_URL=https://your-app.appspot.com/api/colab/webhook
# COLAB_ANALYSIS_ENABLED=true
# COLAB_AUTO_SYNC=true
